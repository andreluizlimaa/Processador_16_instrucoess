// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "03/26/2024 10:21:48"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Comparator_LG_1bit (
	A,
	B,
	ie,
	il,
	ig,
	e,
	l,
	g);
input 	A;
input 	B;
input 	ie;
input 	il;
input 	ig;
output 	e;
output 	l;
output 	g;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \il~combout ;
wire \ig~combout ;
wire \A~combout ;
wire \B~combout ;
wire \e~0_combout ;
wire \ie~combout ;
wire \l~0_combout ;
wire \g~0_combout ;


cycloneii_io \il~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\il~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(il));
// synopsys translate_off
defparam \il~I .input_async_reset = "none";
defparam \il~I .input_power_up = "low";
defparam \il~I .input_register_mode = "none";
defparam \il~I .input_sync_reset = "none";
defparam \il~I .oe_async_reset = "none";
defparam \il~I .oe_power_up = "low";
defparam \il~I .oe_register_mode = "none";
defparam \il~I .oe_sync_reset = "none";
defparam \il~I .operation_mode = "input";
defparam \il~I .output_async_reset = "none";
defparam \il~I .output_power_up = "low";
defparam \il~I .output_register_mode = "none";
defparam \il~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \ig~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\ig~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(ig));
// synopsys translate_off
defparam \ig~I .input_async_reset = "none";
defparam \ig~I .input_power_up = "low";
defparam \ig~I .input_register_mode = "none";
defparam \ig~I .input_sync_reset = "none";
defparam \ig~I .oe_async_reset = "none";
defparam \ig~I .oe_power_up = "low";
defparam \ig~I .oe_register_mode = "none";
defparam \ig~I .oe_sync_reset = "none";
defparam \ig~I .operation_mode = "input";
defparam \ig~I .output_async_reset = "none";
defparam \ig~I .output_power_up = "low";
defparam \ig~I .output_register_mode = "none";
defparam \ig~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \A~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\A~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(A));
// synopsys translate_off
defparam \A~I .input_async_reset = "none";
defparam \A~I .input_power_up = "low";
defparam \A~I .input_register_mode = "none";
defparam \A~I .input_sync_reset = "none";
defparam \A~I .oe_async_reset = "none";
defparam \A~I .oe_power_up = "low";
defparam \A~I .oe_register_mode = "none";
defparam \A~I .oe_sync_reset = "none";
defparam \A~I .operation_mode = "input";
defparam \A~I .output_async_reset = "none";
defparam \A~I .output_power_up = "low";
defparam \A~I .output_register_mode = "none";
defparam \A~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \B~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\B~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(B));
// synopsys translate_off
defparam \B~I .input_async_reset = "none";
defparam \B~I .input_power_up = "low";
defparam \B~I .input_register_mode = "none";
defparam \B~I .input_sync_reset = "none";
defparam \B~I .oe_async_reset = "none";
defparam \B~I .oe_power_up = "low";
defparam \B~I .oe_register_mode = "none";
defparam \B~I .oe_sync_reset = "none";
defparam \B~I .operation_mode = "input";
defparam \B~I .output_async_reset = "none";
defparam \B~I .output_power_up = "low";
defparam \B~I .output_register_mode = "none";
defparam \B~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \e~0 (
// Equation(s):
// \e~0_combout  = (\il~combout ) # ((\ig~combout ) # (\A~combout  $ (\B~combout )))

	.dataa(\il~combout ),
	.datab(\ig~combout ),
	.datac(\A~combout ),
	.datad(\B~combout ),
	.cin(gnd),
	.combout(\e~0_combout ),
	.cout());
// synopsys translate_off
defparam \e~0 .lut_mask = 16'hEFFE;
defparam \e~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \ie~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\ie~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(ie));
// synopsys translate_off
defparam \ie~I .input_async_reset = "none";
defparam \ie~I .input_power_up = "low";
defparam \ie~I .input_register_mode = "none";
defparam \ie~I .input_sync_reset = "none";
defparam \ie~I .oe_async_reset = "none";
defparam \ie~I .oe_power_up = "low";
defparam \ie~I .oe_register_mode = "none";
defparam \ie~I .oe_sync_reset = "none";
defparam \ie~I .operation_mode = "input";
defparam \ie~I .output_async_reset = "none";
defparam \ie~I .output_power_up = "low";
defparam \ie~I .output_register_mode = "none";
defparam \ie~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \l~0 (
// Equation(s):
// \l~0_combout  = (!\ig~combout  & (((\B~combout  & !\A~combout )) # (!\ie~combout )))

	.dataa(\B~combout ),
	.datab(\A~combout ),
	.datac(\ie~combout ),
	.datad(\ig~combout ),
	.cin(gnd),
	.combout(\l~0_combout ),
	.cout());
// synopsys translate_off
defparam \l~0 .lut_mask = 16'h002F;
defparam \l~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \g~0 (
// Equation(s):
// \g~0_combout  = (!\il~combout  & (((\A~combout  & !\B~combout )) # (!\ie~combout )))

	.dataa(\A~combout ),
	.datab(\B~combout ),
	.datac(\ie~combout ),
	.datad(\il~combout ),
	.cin(gnd),
	.combout(\g~0_combout ),
	.cout());
// synopsys translate_off
defparam \g~0 .lut_mask = 16'h002F;
defparam \g~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \e~I (
	.datain(!\e~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(e));
// synopsys translate_off
defparam \e~I .input_async_reset = "none";
defparam \e~I .input_power_up = "low";
defparam \e~I .input_register_mode = "none";
defparam \e~I .input_sync_reset = "none";
defparam \e~I .oe_async_reset = "none";
defparam \e~I .oe_power_up = "low";
defparam \e~I .oe_register_mode = "none";
defparam \e~I .oe_sync_reset = "none";
defparam \e~I .operation_mode = "output";
defparam \e~I .output_async_reset = "none";
defparam \e~I .output_power_up = "low";
defparam \e~I .output_register_mode = "none";
defparam \e~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \l~I (
	.datain(\l~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(l));
// synopsys translate_off
defparam \l~I .input_async_reset = "none";
defparam \l~I .input_power_up = "low";
defparam \l~I .input_register_mode = "none";
defparam \l~I .input_sync_reset = "none";
defparam \l~I .oe_async_reset = "none";
defparam \l~I .oe_power_up = "low";
defparam \l~I .oe_register_mode = "none";
defparam \l~I .oe_sync_reset = "none";
defparam \l~I .operation_mode = "output";
defparam \l~I .output_async_reset = "none";
defparam \l~I .output_power_up = "low";
defparam \l~I .output_register_mode = "none";
defparam \l~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \g~I (
	.datain(\g~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(g));
// synopsys translate_off
defparam \g~I .input_async_reset = "none";
defparam \g~I .input_power_up = "low";
defparam \g~I .input_register_mode = "none";
defparam \g~I .input_sync_reset = "none";
defparam \g~I .oe_async_reset = "none";
defparam \g~I .oe_power_up = "low";
defparam \g~I .oe_register_mode = "none";
defparam \g~I .oe_sync_reset = "none";
defparam \g~I .operation_mode = "output";
defparam \g~I .output_async_reset = "none";
defparam \g~I .output_power_up = "low";
defparam \g~I .output_register_mode = "none";
defparam \g~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
